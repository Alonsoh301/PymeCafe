@model IEnumerable<PymeCafe.Models.Producto>

@{
    ViewData["Title"] = "Tienda";
}

<div class="container mt-5">
    <div class="row">
        <!-- Área de búsqueda -->
        <div class="col-md-3">
            <h4 class="text-success">Buscar Productos</h4>
            <form method="get" action="@Url.Action("Index", "Tienda")" class="mb-4">
                <!-- Búsqueda por nombre -->
                <input type="text" name="searchString" class="form-control mb-3" placeholder="Buscar por nombre" />

                <!-- Filtro por categoría -->
                <select name="categoryFilter" class="form-select mb-3">
                    <option value="">Todas las Categorías</option>
                    @if (ViewBag.Categorias != null)
                    {
                        foreach (var categoria in ViewBag.Categorias)
                        {
                            <option value="@categoria.NombreCategoria">@categoria.NombreCategoria</option>
                        }
                    }
                </select>

                <!-- Botón de Filtrar -->
                <button type="submit" class="btn btn-success w-100 mb-2">Filtrar</button>

                <!-- Botón de Carrito -->
                <a href="@Url.Action("Carrito", "Tienda")" class="btn btn-custom w-100">Ver Carrito</a>
            </form>
        </div>

        <!-- Área de productos -->
        <div class="col-md-9">
            <h4 class="text-center text-success mb-4">Productos Disponibles</h4>
            <div class="row">
                @foreach (var producto in Model)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm">
                            <!-- Imagen del producto -->
                            @if (!string.IsNullOrEmpty(producto.Foto))
                            {
                                <img src="@producto.Foto" alt="@producto.NombreProducto" class="card-img-top" style="height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="placeholder-image text-center d-flex align-items-center justify-content-center"
                                     style="background-color: #e9ecef; height: 200px; font-size: 24px; color: #6c757d;">
                                    @producto.NombreProducto.Substring(0, 1).ToUpper()
                                </div>
                            }
                            <div class="card-body">
                                <h5 class="card-title text-success">@producto.NombreProducto</h5>
                                <p class="card-text">@producto.Descripcion</p>
                                <p class="card-text text-primary"><strong>$@producto.Precio</strong></p>
                                <button class="btn btn-custom agregar-carrito" data-id="@producto.ProductoId">Agregar al Carrito</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    // Lógica para agregar productos al carrito
    document.querySelectorAll('.agregar-carrito').forEach(button => {
        button.addEventListener('click', async function () {
            const productoId = this.getAttribute('data-id');

            // Enviar solicitud al controlador
            const response = await fetch('@Url.Action("AgregarAlCarrito", "Tienda")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productoId: parseInt(productoId), cantidad: 1 })
            });

            if (response.ok) {
                alert("Producto agregado al carrito");
            } else {
                alert("Error al agregar el producto al carrito");
            }
        });
    });
</script>
